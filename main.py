import telebot  # https://pypi.org/project/pyTelegramBotAPI/
from telebot import types

bot = telebot.TeleBot('6198377914:AAEZ0MAf__3sdqqm8B-hujwaTH7QaNZi3AE')

print("hi")
def generate_start_markup():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    directions = types.KeyboardButton('–û –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö üìö')
    sign_up_for_classes = types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ üìù')
    website = types.KeyboardButton('–ù–∞—à —Å–∞–π—Ç üåê')
    markup.add(directions, sign_up_for_classes, website)
    return markup


@bot.message_handler(content_types=['photo'])
def get_user_photo(message):
    bot.send_message(message.chat.id, '–ö–ª–∞—Å—Å–Ω–æ–µ —Ñ–æ—Ç–æ, –¥–∞–≤–∞–π –µ—â–µ!')


@bot.message_handler(commands=['start'])
def start(message):
    markup = generate_start_markup()
    mess = f'–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>! –Ø —Ç–≤–æ–π –π–æ–≥–∞-–ø–æ–º–æ—â–Ω–∏–∫, –∏ —è —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–≥—É —Ç–µ–±–µ ' \
           f'–ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é –∏–º–µ–Ω–Ω–æ –¥–ª—è —Ç–µ–±—è –ø—Ä–∞–∫—Ç–∏–∫—É –∏ –±—ã—Å—Ç—Ä–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–µ–µ.'
    bot.send_message(message.chat.id, mess, parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def messages(message):
    """"""
    get_message_bot = message.text

    if get_message_bot == '–û –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö üìö':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        markup.add(
            types.KeyboardButton('–ô–æ–≥–∞ üßòÔ∏è'),
            types.KeyboardButton('–ü–∏–ª–∞—Ç–µ—Å ü§∏‚Äç‚ôÄÔ∏è'),
            types.KeyboardButton('–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ ü§±'),
            types.KeyboardButton('–ö–∏–Ω–µ–∑–∏—Ç–µ—Ä–∞–ø–∏—è ‚õë'),
            types.KeyboardButton('–ë–æ–¥–∏—Ä–æ–ª–∏–Ω–≥ üíÜ‚Äç‚ôÄÔ∏è'),
            types.KeyboardButton('–í –Ω–∞—á–∞–ª–æ üîô')
        )
        final_message = "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
    elif get_message_bot == '–ô–æ–≥–∞ üßòÔ∏è':
        markup = types.InlineKeyboardMarkup(row_width=2)
        markup.add(
            types.InlineKeyboardButton('–•–∞—Ç—Ö–∞-–ô–æ–≥–∞', callback_data='hatha_yoga'),
            types.InlineKeyboardButton('–ô–æ–≥–∞ –ê–π–µ–Ω–≥–∞—Ä–∞', callback_data='yoga_aengara'),
            types.InlineKeyboardButton('–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –ô–æ–≥–∞', callback_data='universal_yoga'),
            types.InlineKeyboardButton('–ê—à—Ç–∞–Ω–∞-–ô–æ–≥–∞', callback_data='ashtana_yoga'),
            types.InlineKeyboardButton('–ô–æ–≥–∞-–ù–∏–¥—Ä–∞', callback_data='yoga_nidra'),
            types.InlineKeyboardButton('–í–∏–Ω—å—è—Å–∞-–ô–æ–≥–∞', callback_data='viniysa_yoga'),
            types.InlineKeyboardButton('–ô–æ–≥–∞ –≤ –≥–∞–º–∞–∫–∞—Ö', callback_data='yoga_in_hammock'),
            types.InlineKeyboardButton('–ô–æ–≥–∞ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö', callback_data='yoga_beginer'),
            types.InlineKeyboardButton('–ô–æ–≥–∞ –≤ –≤–æ–∑–¥—É—Ö–µ', callback_data='yoga_in_air')
        )
        final_message = "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ —Ä–∞–∑–¥–µ–ª–µ '–ô–æ–≥–∞'"
    elif get_message_bot == '–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ ü§±':
        markup = types.InlineKeyboardMarkup(row_width=2)
        markup.add(
            types.InlineKeyboardButton('–ô–æ–≥–∞ –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö', callback_data='yoga_pregnant'),
            types.InlineKeyboardButton('–ë–µ–π–±–∏ –ô–æ–≥–∞', callback_data='baby_yoga'),
            types.InlineKeyboardButton('–ô–æ–≥–∞ –¥–ª—è –¥–µ—Ç–µ–π', callback_data='yoga_children'),
            types.InlineKeyboardButton('–ö–æ—Ä—Ä–µ–∫—Ü–∏—è –æ—Å–∞–Ω–∫–∏', callback_data='posture_correction'),
            types.InlineKeyboardButton('Snag-–≥–æ–ª—å—Ñ', callback_data='snag_golf')
        )
        final_message = "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ —Ä–∞–∑–¥–µ–ª–µ '–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏'"
    elif get_message_bot in ['–ë–æ–¥–∏—Ä–æ–ª–∏–Ω–≥ üíÜ‚Äç‚ôÄÔ∏è', '–ü–∏–ª–∞—Ç–µ—Å ü§∏‚Äç‚ôÄÔ∏è', '–ö–∏–Ω–µ–∑–∏—Ç–µ—Ä–∞–ø–∏—è ‚õë']:
        final_message = f"{get_message_bot} - —ç—Ç–æ ..."
        bot.send_message(message.chat.id, final_message, parse_mode='html')
        return
    elif get_message_bot == '–í –Ω–∞—á–∞–ª–æ üîô':
        start(message)
        return
    elif get_message_bot == '–ù–∞—à —Å–∞–π—Ç üåê':
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ü–æ—Å–µ—Ç–∏—Ç—å –≤–µ–± —Å–∞–π—Ç", url='https://yogavtule.ru/'))
        final_message = '–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ'
    elif get_message_bot == '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ üìù':
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è",
                                              url='https://mobifitness.ru/schedule-widget/?vk&code=100931&type'
                                                  '=schedule&host=mobifitness.ru&version=v6&club=&language=#/schedule'))
        final_message = '–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ'
    else:
        final_message = '‚¨áÔ∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤‚¨áÔ∏è'
        bot.send_message(message.chat.id, final_message, parse_mode='html')
        return
    bot.send_message(message.chat.id, final_message, parse_mode='html', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def query_handler(call):
    responses = {
        'hatha_yoga': '–•–∞—Ç—Ö–∞-–ô–æ–≥–∞ - —ç—Ç–æ ...',
        'yoga_aengara': '–ô–æ–≥–∞ –ê–µ–Ω–≥–∞—Ä–∞- —ç—Ç–æ ...',
        'universal_yoga': '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –ô–æ–≥–∞ - —ç—Ç–æ ...',
        'ashtana_yoga': '–ê—à—Ç–∞–Ω–∞ –ô–æ–≥–∞ - —ç—Ç–æ ...',
        'yoga_nidra': '–ô–æ–≥–∞ –Ω–∏–¥—Ä–∞- —ç—Ç–æ ...',
        'viniysa_yoga': '–í–∏–Ω—å—è—Å–∞ –ô–æ–≥–∞ - —ç—Ç–æ ...',
        'yoga_in_hammock': '–ô–æ–≥–∞ –≤ –≥–∞–º–∞–∫–∞—Ö - —ç—Ç–æ ...',
        'yoga_beginer': '–ô–æ–≥–∞ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö - —ç—Ç–æ ...',
        'yoga_in_air': '–ô–æ–≥–∞ –≤ –≤–æ–∑–¥—É—Ö–µ - —ç—Ç–æ ...',
        'yoga_pregnant': '–ô–æ–≥–∞ –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö - —ç—Ç–æ ...',
        'baby_yoga': '–ë–µ–π–±–∏ –ô–æ–≥–∞ - —ç—Ç–æ ...',
        'yoga_children': '–ô–æ–≥–∞ –¥–ª—è –¥–µ—Ç–µ–π - —ç—Ç–æ ...',
        'posture_correction': '–ö–æ—Ä—Ä–µ–∫—Ü–∏—è –æ—Å–∞–Ω–∫–∏ - —ç—Ç–æ ...',
        'snag_golf': 'Snag-–≥–æ–ª—å—Ñ - —ç—Ç–æ ...',
    }
    response = responses.get(call.data)
    if response:
        bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text=response)

print("hi2")
bot.polling(none_stop=True)